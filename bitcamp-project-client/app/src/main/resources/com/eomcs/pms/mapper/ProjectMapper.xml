<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="ProjectMapper">
  
  <resultMap id="projectMap" type="project">
    <id column="no" property="no"/>
    <result column="title" property="title"/>
    <result column="content" property="content"/>
    <result column="sdt" property="startDate"/>
    <result column="edt" property="endDate"/>
    
    <association property="owner" javaType="member"> 
      <id column="owner_no" property="no"/>
      <result column="owner_name" property="name"/>
    </association>
    
    <collection property="members" ofType="member">
      <id column="member_no" property="no"/>
      <result column="member_name" property="name"/>
    </collection>
  </resultMap>
  
  <insert id="insert" parameterType="project"
          useGeneratedKeys="true" keyColumn="no" keyProperty="no">
    insert into pms_project(title,content,sdt,edt,owner) 
    values(#{title}, #{content}, #{startDate}, #{endDate}, #{owner.no})   
  </insert>
  <!-- 
    keyColumn="no" : pk값 가져오기
    keyProperty="no" : 가져온 값을 project의 setNo를 호출해서 넣어라
    PreparedStatement stmt = con.preparedStatement
   -->

  <select id="findByNo" resultMap="projectMap" parameterType="int"> <!-- resultMap 규칙에 따라 컬럼값을 객체에 담는다 -->
    select
      p.no,
      p.title,
      p.content,
      p.sdt,
      p.edt,
      m.no as owner_no,
      m.name as owner_name,
      m2.no as member_no,
      m2.name as member_name
    from pms_project p
      inner join pms_member m on p.owner=m.no
      left outer join pms_member_project mp on mp.project_no=p.no
      left outer join pms_member m2 on mp.member_no=m2.no
    where p.no=#{value}
  </select>
  
  <select id="findByKeyword" resultMap="projectMap" parameterType="map"> 
    select
      p.no,
      p.title,
      p.content,
      p.sdt,
      p.edt,
      m.no as owner_no,
      m.name as owner_name,
      m2.no as member_no,
      m2.name as member_name
    from pms_project p
      inner join pms_member m on p.owner=m.no
      left outer join pms_member_project mp on mp.project_no=p.no
      left outer join pms_member m2 on mp.member_no=m2.no
      
    <if test="item == 1">
      where p.title like concat('%', #{keyword}, '%')
    </if>
    <if test="item == 2">
      where m_name like concat('%', #{keyword}, '%')
    </if>         
    <if test="item == 3">
      where m2_name like concat('%', #{keyword}, '%')
    </if>
  </select>
  
  <update id="update" parameterType="project">
    update pms_project set
      title=#{title},
      content=#{content},
      sdt=#{startDate},
      edt=#{endDate},
      owner=#{owner.no}
    where no=#{no}  
  </update>
  
  <delete id="delete" parameterType="int">
    delete from pms_project 
    where no=#{value}
  </delete>

  <insert id="insertMember" parameterType="map"> <!-- 2개의 파라미터를 받을 수 없다 -> map으로 받는다. -->
    insert into pms_member_project(member_no,project_no) 
    values(#{memberNo}, #{projectNo}) <!-- map에 저장한 이름  memberNo : map.getMemberNo -->
  </insert>
  
  <delete id="deleteMembers" parameterType="int">
    delete from pms_member_project 
    where project_no=#{value}
  </delete>
  
  <select id="findAllMembers" resultType="member" parameterType="int">
    select <!-- 컬럼 이름과 프로퍼티 이름이 같기 때문에 따로 resultMap을 만들 필요는 없다! -->
      m.no,
      m.name
    from pms_member_project mp
      inner join pms_member m on mp.member_no=m.no
    where
      mp.project_no=#{value}
  </select>
</mapper>







